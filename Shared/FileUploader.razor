@inject IJSRuntime js; 

<div class="w3-margin w3-padding">
    <div @ref=box class="w3-round-xlarge w3-padding w3-center border dashed well">
        <p class="w3-center">
            @lastFilePath
        </p>
        <img src="static/images/upload.svg" width=96 class="w3-margin" style="margin-left: auto; margin-right: auto;">
        <br>
        <input @ref=input class="w3-hide" type="file" @onchange=onFileChange id="@Id" accept="@Accept">
        <label for="@Id">
            <strong>Choose a file</strong> or drag it here.
        </label>
    </div>
</div>

@code {
    [Parameter] public string Id {get; set;}
    [Parameter] public string Accept {get; set;} = "*";
    [Parameter] public Action<string> OnFileChanged {get; set;}
    private ElementReference box;
    private ElementReference input;
    private string lastFilePath;

    protected override async Task OnAfterRenderAsync(bool firstTime) {
        if (firstTime) {
            await js.InvokeVoidAsync("RpgNotes.InputBindFileDrop", box, input);
        }
    }

    private async void onFileChange() {
        var filePath = await js.InvokeAsync<string>("RpgNotes.FileInputFullPath", input);
        this.lastFilePath = filePath;
        this.OnFileChanged?.Invoke(filePath);
    }
}