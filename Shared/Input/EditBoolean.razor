@inject FileManager files;

<div class="field">
<label>@Label</label>
<div class="w3-row">
    @if (AllowEdit) {
    <div class="w3-col edit" style="width:24px">
        <img src="static/images/edit.svg" style="width:24px; padding-top:8px;" @onclick=@(() => isDisabled = !isDisabled)>
    </div>
    }
    <div class="w3-rest w3-right-align">
        @if (isDisabled) {
            <input value="@boolString" class="w3-right-align" disabled>
        } else {
            <div class="w3-button @(value == true ? "ok" : string.Empty)" @onclick=@(() => value = true)>&checkmark;</div>
            <div class="w3-button @(value ==false ? "error" : string.Empty)" @onclick=@(() => value = false)>&times;</div>
        }
    </div>
    
</div>
</div>

@code {
    [Parameter] public string Label {get; set;}
    [Parameter] public bool AllowEdit {get; set;} = false;
    [Parameter] public Func<string> Getter {get; set;}
    [Parameter] public Action<string> Setter {get; set;}

    private bool isDisabled = true;
    private string text {
        get => Getter?.Invoke();
        set {
            isDisabled = true; // After you change the value auto-stop editing
            Setter?.Invoke(value);
            files.MarkDirty();
            StateHasChanged();
        }
    }
    private bool value {
        get {
            bool b;
            if (bool.TryParse(text, out b)) {
                return b;
            } else {
                return default(bool);
            }
        } 
        set {
            text = value.ToString();
        }
    }
    private string boolString => value == true ? "Yes" : "No";

}