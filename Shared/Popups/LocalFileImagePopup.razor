@using ElectronNET.API
@using RpgNotes.Desktop.Shared.Layouts
@using System.IO

<Modal Title="Add Image" Visible=popupVisible OnClose=close>
    @if (string.IsNullOrEmpty(imagePath)) {
    <FileExplorer Load=true OnFileSelected=setPath OnCancelled=close Patterns="png,jpeg,tif,svg,gif">
    </FileExplorer>
    } else {
    <div class="w3-padding w3-center">
        <button class="w3-button" @onclick=@(() => imagePath = null)>change image</button>
        <br>
        <img src="@(image.GetUrl())" style="width: auto; max-width: 240px; height: auto; max-height: 240px;">
    </div>
    <div class="w3-padding w3-center">
        <button class="w3-button @(canAdd ? "ok" : "disable")" @onclick=link>
            <img src="static/images/link.svg" width=20> Link
        </button>
        <button class="w3-button @(canAdd ? "ok" : "disable")" @onclick=embed>
            <img src="static/images/embed.svg" width=20> Embed
        </button>
    </div>
    }
</Modal>

@code {
    private bool popupVisible = false;
    private bool canAdd => !string.IsNullOrEmpty(imagePath) && File.Exists(imagePath);

    [Parameter] public Action<Image> OnAdd {get; set;}

    public void Open() {
        popupVisible = true;
        imagePath = null;
        StateHasChanged();
    }
    private void close() {
        popupVisible=false; 
        StateHasChanged();
    }

    private string imagePath;
    private Image image => Image.HardDriveLink(imagePath);
    private void setPath(string path) {
        this.imagePath = path;
        StateHasChanged();
    }

    private void link () {
        if (canAdd) {
            var image = Image.HardDriveLink(imagePath);
            OnAdd?.Invoke(image);
            imagePath = null;
            popupVisible = false;
            StateHasChanged();
        }
    }

    private void embed() {
        if (canAdd) {
            var image = Image.EmbedBase64(imagePath);
            OnAdd?.Invoke(image);
            imagePath = null;
            popupVisible = false;
            StateHasChanged();
        }
    }
}